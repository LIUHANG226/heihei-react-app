[{"D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\detail.js":"1","D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\container.js":"2","D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\detail-foot.js":"3"},{"size":2493,"mtime":1606972954763,"results":"4","hashOfConfig":"5"},{"size":480,"mtime":1606973064317,"results":"6","hashOfConfig":"5"},{"size":3545,"mtime":1606973473812,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1q0hwdc",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\detail.js",["15","16","17","18","19"],"D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\container.js",[],"D:\\h5\\实训\\React\\小组项目\\项目2\\miaov\\src\\view\\yango\\detail-foot.js",["20","21","22","23"],"import React, { useState, useEffect } from 'react'\r\nimport '../../css/zm-detail.css'\r\nimport { good, getGood, cancelGood } from '../../server/api'\r\n\r\nfunction Foot(props) {\r\n\r\n    let { setlike, like } = props\r\n    let [msg, setmsg] = useState(\"\")\r\n    useEffect(() => {\r\n        console.log()\r\n    }, [msg])\r\n    // console.log(props.footData, props);\r\n    let { footData, artid, sompeople, setsome } = props;\r\n    let sum = sompeople\r\n    return (\r\n        <div className=\"comment\">\r\n            <p className=\"give_praise\">\r\n                <span>\r\n                    有{sompeople}人觉得很赞\r\n                </span>\r\n                <span className=\"praise_span\" onClick={async () => {\r\n\r\n                    //是否点赞\r\n                    let isGood = await getGood({\r\n                        article_id: artid\r\n                    })\r\n                    console.log(\"是否点赞\", isGood.data)\r\n                    //如果返回0则说明点过赞,取消\r\n                    if (isGood.data.code === 0) {\r\n                        setlike(!like)\r\n                        //取消点赞\r\n                        let delGood = await cancelGood({\r\n                            goodid: isGood.data.gooid,\r\n                            article_id: artid\r\n                        })\r\n                        sum--\r\n                        setsome(sum)\r\n\r\n                        // console.log(\"取消点赞\", delGood)\r\n\r\n                    } else if (isGood.data.code === 1) {//未登录\r\n\r\n                        console.log(isGood.data.msg)\r\n                    } else if (isGood.data.code === 3) {\r\n                        setlike(!like)\r\n                        //点赞\r\n                        let toGood = await good({\r\n                            article_id: artid\r\n                        })\r\n                        sum++\r\n                        setsome(sum)\r\n\r\n                        // console.log(\"点赞\", toGood)\r\n                    }\r\n                }}\r\n                    className={\"praise_span \" + (like ? \"praise_span1\" : \"praise_span\")}>\r\n                </span>\r\n            </p>\r\n            <div className=\"comment_list_wrap\">\r\n                <div>\r\n                    <ul className=\"comment_list\">\r\n                        {\r\n                            footData.map((item, index) => {\r\n                                return (\r\n                                    <div>\r\n                                        <li>\r\n                                            <div className=\"comment_user\">\r\n                                                <span>{item.username}</span>\r\n                                            </div>\r\n                                            <div className=\"comment_txt\">\r\n                                                {item.content}\r\n                                            </div>\r\n                                            <div className=\"comment_time\">\r\n                                                {item.create_time}\r\n                                            </div>\r\n                                        </li>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <div className=\"loadmore\">\r\n                        <span className=\"loadmore_img\"></span>\r\n                        没有更多了\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Foot\r\n",{"ruleId":"24","severity":1,"message":"25","line":9,"column":41,"nodeType":"26","messageId":"27","endLine":9,"endColumn":48},{"ruleId":"24","severity":1,"message":"28","line":16,"column":17,"nodeType":"26","messageId":"27","endLine":16,"endColumn":25},{"ruleId":"24","severity":1,"message":"29","line":17,"column":19,"nodeType":"26","messageId":"27","endLine":17,"endColumn":27},{"ruleId":"30","severity":1,"message":"31","line":21,"column":15,"nodeType":"32","endLine":53,"endColumn":6},{"ruleId":"30","severity":1,"message":"33","line":53,"column":8,"nodeType":"34","endLine":53,"endColumn":10,"suggestions":"35"},{"ruleId":"24","severity":1,"message":"36","line":8,"column":15,"nodeType":"26","messageId":"27","endLine":8,"endColumn":21},{"ruleId":"24","severity":1,"message":"37","line":32,"column":29,"nodeType":"26","messageId":"27","endLine":32,"endColumn":36},{"ruleId":"24","severity":1,"message":"38","line":47,"column":29,"nodeType":"26","messageId":"27","endLine":47,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":56,"column":21,"nodeType":"41","endLine":56,"endColumn":89},"no-unused-vars","'isLogin' is defined but never used.","Identifier","unusedVar","'setArtid' is assigned a value but never used.","'setLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["42"],"'setmsg' is assigned a value but never used.","'delGood' is assigned a value but never used.","'toGood' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"43","fix":"44"},"Update the dependencies array to be: [match.params.id]",{"range":"45","text":"46"},[1530,1532],"[match.params.id]"]