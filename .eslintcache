[{"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\xuenan\\index.js":"1","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\login\\login.js":"2","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\zhl\\cont.js":"3","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\index.js":"4","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\course\\head.js":"5","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\detail.js":"6","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\callfoot.js":"7","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\detail-foot.js":"8"},{"size":659,"mtime":1606787321838,"results":"9","hashOfConfig":"10"},{"size":7080,"mtime":1606883185836,"results":"11","hashOfConfig":"10"},{"size":2764,"mtime":1606883185848,"results":"12","hashOfConfig":"10"},{"size":405,"mtime":1606883185790,"results":"13","hashOfConfig":"10"},{"size":3237,"mtime":1606654303182,"results":"14","hashOfConfig":"10"},{"size":2024,"mtime":1606891412105,"results":"15","hashOfConfig":"10"},{"size":1051,"mtime":1606890147256,"results":"16","hashOfConfig":"10"},{"size":3229,"mtime":1606897169189,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bdnqoc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\xuenan\\index.js",[],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\login\\login.js",["37","38","39","40","41"],"import React, {useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport \"./normalize.css\";\r\nimport user_img from '../../images/user_img.png'\r\n\r\nimport {getRegister,login} from \"../../server/api\"\r\n\r\nfunction BLogin(props) {\r\n\r\n\r\n  \r\n  //登录跳转\r\n  let to1 = useHistory();\r\n  const [load, setLoad] = useState(1);\r\n  // 用户名\r\n  const [username, setUsername] = useState(\"\");\r\n  // 密码\r\n  const [password, setPassword] = useState(\"\");\r\n  // 确认密码\r\n  const [passwordA, setPassworda] = useState(\"\");\r\n  \r\n  let [code, setCodex] = useState();\r\n\r\n  // 验证码\r\n  const [vcode, setVcode] = useState(\"\");\r\n  const [vcodeShow, setVcodeShow] = useState(false);\r\n  const [vcodeSrc, setVcodeSrc] = useState(\"/miaov/user/verify?\" + Date.now());\r\n\r\n  const ToLoginr = async () => {\r\n    const data = await login({\r\n      verify:vcode,\r\n      username,\r\n      password\r\n    });\r\n    console.log(data);\r\n    \r\n    if (data.data.code === 0) {\r\n      console.log(to1);\r\n      window.localStorage.setItem(\"user\", username);\r\n      console.log(username);\r\n      alert(\"登陆成功\")\r\n      to1.push(\"/\");\r\n    }else{\r\n      alert(data.data.msg)\r\n    }\r\n  };\r\n  const ToRegister = async () => {\r\n    // console.log();\r\n    const data = await getRegister({verify:vcode, username, password, repassword:passwordA});\r\n    console.log(data);\r\n    setCodex(data.data.code);\r\n    if (code === 0) {\r\n      setLoad(1);\r\n      alert(\"注册成功\")\r\n    }else{\r\n      alert(data.data.msg)\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"login_boxWrap\">\r\n      <h2 className=\"login_register\">\r\n        <span>登录&注册</span>\r\n      </h2>\r\n      <div className=\"login_register_box\">\r\n        <div className=\"box\">\r\n          <div\r\n            className=\"login_box\"\r\n            className={load === 1 ? \"login_box\" : \"hide\"}\r\n          >\r\n            <figure className=\"user_img\">\r\n              <p><img src={user_img} /></p>\r\n              <figcaption>如有账号，请直接登录</figcaption>\r\n            </figure>\r\n            <div className=\"login_form\">\r\n              <p>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"用户名\"\r\n                  autoComplete=\"off\"\r\n                  value={username}\r\n                  onChange={({ target }) => {\r\n                    setUsername(target.value);\r\n                  }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"请输入密码\"\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"text\"\r\n                  style={{width:\"40%\"}}\r\n                  placeholder=\"验证码\"\r\n                  value={vcode}\r\n                  onChange={(e) => {\r\n                    setVcode(e.target.value);\r\n                  }}\r\n                  onFocus={() => {\r\n                    setVcodeShow(true);\r\n                  }}\r\n                />\r\n                {vcodeShow ? (\r\n                  <img\r\n                    className=\"verify\"\r\n                    src={vcodeSrc}\r\n                    onClick={() => {\r\n                      setVcodeSrc(\"/miaov/user/verify?\" + Date.now());\r\n                    }}\r\n                    alt=\"\"\r\n                  ></img>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </p>\r\n              <button\r\n                className=\"form_btn\"\r\n                onClick={() => {\r\n                  ToLoginr();\r\n                }}\r\n              >\r\n                登录\r\n              </button>\r\n              <p className=\"form_tip\">\r\n                没有帐号？\r\n                <a\r\n                  className=\"login_a\"\r\n                  onClick={() => {\r\n                    setLoad(0);\r\n                  }}\r\n                >\r\n                  立即注册\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className={load === 0 ? \"register_box\" : \"hide\"}>\r\n            <h3>注册账号</h3>\r\n            <div className=\"register_form\">\r\n              <p>\r\n                <input\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"用户名\"\r\n                  value={username}\r\n                  onChange={({ target }) => {\r\n                    setUsername(target.value);\r\n                  }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"设置密码\"\r\n                  value={password}\r\n                  onChange={({ target }) => {\r\n                    setPassword(target.value);\r\n                  }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"确定密码\"\r\n                  value={passwordA}\r\n                  onChange={({ target }) => {\r\n                    setPassworda(target.value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (password !== passwordA) {\r\n                      alert(\"密码不正确，请重新输入！！\");\r\n                      setPassworda(\"\");\r\n                    }\r\n                  }}\r\n                />\r\n              </p>\r\n              <p>\r\n                <input\r\n                  type=\"text\"\r\n                  style={{width:\"40%\"}}\r\n                  placeholder=\"验证码\"\r\n                  onChange={(e) => {\r\n                    setVcode(e.target.value);\r\n                  }}\r\n                  onFocus={() => {\r\n                    setVcodeShow(true);\r\n                  }}\r\n                />\r\n                {vcodeShow ? (\r\n                  <img\r\n                    className=\"verify\"\r\n                    src={vcodeSrc}\r\n                    onClick={() => {\r\n                      setVcodeSrc(\"/miaov/user/verify?\" + Date.now());\r\n                    }}\r\n                    alt=\"\"\r\n                  ></img>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </p>\r\n              <button\r\n                className=\"form_btn\"\r\n                onClick={() => {\r\n                  ToRegister();\r\n                }}\r\n              >\r\n                马上注册\r\n              </button>\r\n              <p className=\"form_tip\">\r\n                已有帐号？\r\n                <a\r\n                  className=\"login_a\"\r\n                  onClick={() => {\r\n                    setLoad(1);\r\n                  }}\r\n                >\r\n                  立即登录\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BLogin;\r\n// export default connect((res) => {\r\n//   return res;\r\n// })(BLogin);\r\n",["42","43"],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\zhl\\cont.js",["44","45"],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\index.js",[],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\course\\head.js",["46"],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\detail.js",["47","48","49","50"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport '../../css/yo-detail.css'\r\nimport '../../css/zm-detail.css'\r\nimport Banner from '../../component/Banner'\r\nimport Container from '../yango/container'\r\nimport Foot from '../yango/detail-foot'\r\nimport CallFoot from './callfoot'\r\n\r\nimport { lecturer, getcomment, good, isLogin } from '../../server/api'\r\nfunction Detail(props) {\r\n    let [data, setData] = useState([]);\r\n    let { match } = props\r\n    // console.log('传过来的',match.params.id)\r\n    let [footData, FooData] = useState([]);\r\n    let [getGood, setGood] = useState([]);\r\n    let [artid, setArtid] = useState(match.params.id);\r\n    let [isLogi, setLogi] = useState(false);\r\n    let [isLikes,setLikes] = useState(false);\r\n    useEffect(async () => {\r\n        //详情\r\n        let getData = await lecturer({\r\n            article_id: match.params.id,\r\n        })\r\n        setData(\r\n            getData.data\r\n        )\r\n        //评论\r\n        let commentData = await getcomment({\r\n            article_id: match.params.id,\r\n        })\r\n        FooData(\r\n            commentData.data,\r\n        )\r\n        //点赞\r\n        let praiseGood = await good({\r\n            article_id: match.params.id,\r\n        })\r\n        setGood(\r\n            praiseGood\r\n        )\r\n        //是否登录\r\n        let flag = await isLogin()\r\n        if (flag.data.code === 0) {\r\n            setLogi(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        // <div>\r\n        <Fragment>\r\n            <div className=\"warp\">\r\n                {/*轮播图*/}\r\n                <Banner></Banner>\r\n                {/*主体内容*/}\r\n                <Container data={data}></Container>\r\n                {/*底部*/}\r\n                <Foot footData={footData} good={data.good} getGood={getGood} artid={artid}></Foot>\r\n                {/*回复本贴*/}\r\n                <CallFoot isLogi={isLogi} isLikes={isLikes}></CallFoot>\r\n            </div>\r\n\r\n        </Fragment>\r\n\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Detail","D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\callfoot.js",[],"D:\\实训课件\\React\\小组项目最新\\heihei-react-app\\src\\view\\yango\\detail-foot.js",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":69,"column":13,"nodeType":"59","endLine":69,"endColumn":58},{"ruleId":"60","severity":1,"message":"61","line":72,"column":18,"nodeType":"62","endLine":72,"endColumn":40},{"ruleId":"63","severity":1,"message":"64","line":133,"column":17,"nodeType":"62","endLine":138,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":220,"column":17,"nodeType":"62","endLine":225,"endColumn":18},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"53","severity":1,"message":"69","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":31},{"ruleId":"60","severity":1,"message":"61","line":81,"column":33,"nodeType":"62","endLine":81,"endColumn":38},{"ruleId":"63","severity":1,"message":"70","line":65,"column":21,"nodeType":"62","endLine":65,"endColumn":33},{"ruleId":"53","severity":1,"message":"71","line":16,"column":17,"nodeType":"55","messageId":"56","endLine":16,"endColumn":25},{"ruleId":"53","severity":1,"message":"72","line":18,"column":18,"nodeType":"55","messageId":"56","endLine":18,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":19,"column":15,"nodeType":"75","endLine":46,"endColumn":6},{"ruleId":"73","severity":1,"message":"76","line":46,"column":8,"nodeType":"77","endLine":46,"endColumn":10,"suggestions":"78"},{"ruleId":"53","severity":1,"message":"79","line":9,"column":15,"nodeType":"55","messageId":"56","endLine":9,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":48,"column":17,"nodeType":"59","endLine":48,"endColumn":87},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'getKeyThenIncreaseKey' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setArtid' is assigned a value but never used.","'setLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'setmsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [match.params.id]",{"range":"85","text":"86"},[1406,1408],"[match.params.id]"]